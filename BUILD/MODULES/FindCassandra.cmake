# - Find cassandra client
#
# -*- cmake -*-
#
# Find the native Cassandra includes and library
#
#  CASSANDRA_INCLUDE_DIR - where to find cassandra.h, etc.
#  CASSANDRA_LIBRARIES   - List of libraries when using cassandra DB.
#  CASSANDRA_FOUND       - True if cassandra found.

IF (CASSANDRA_INCLUDE_DIR AND CASSANDRA_LIBRARY)
  # Already in cache, be silent
  SET(CASSANDRA_FIND_QUIETLY TRUE)
ENDIF (CASSANDRA_INCLUDE_DIR AND CASSANDRA_LIBRARY)

# Include dir
FIND_PATH(CASSANDRA_INCLUDE_DIR 
  NAMES cassandra.h
  PATH_SUFFIXES cassandra
)

# Library
#SET(MySQL_NAMES mysqlclient mysqlclient_r)
SET(CASSANDRA_NAMES cassandra)
FIND_LIBRARY(CASSANDRA_LIBRARY
  NAMES ${CASSANDRA_NAMES}
  PATHS /usr/local/lib
  PATH_SUFFIXES x86_64-linux-gnu 
)

IF (CASSANDRA_INCLUDE_DIR AND CASSANDRA_LIBRARY)
  SET(CASSANDRA_FOUND TRUE)
  SET( CASSANDRA_LIBRARIES ${CASSANDRA_LIBRARY} )
ELSE (CASSANDRA_INCLUDE_DIR AND CASSANDRA_LIBRARY)
  SET(CASSANDRA_FOUND FALSE)
  SET( CASSANDRA_LIBRARIES )
ENDIF (CASSANDRA_INCLUDE_DIR AND CASSANDRA_LIBRARY)


IF (CASSANDRA_FOUND)
  IF (NOT CASSANDRA_FIND_QUIETLY)
    MESSAGE(STATUS "Found Cassandra: ${CASSANDRA_LIBRARY}")
  ENDIF (NOT CASSANDRA_FIND_QUIETLY)
ELSE (CASSANDRA_FOUND)
  IF (CASSANDRA_FIND_REQUIRED)
    MESSAGE(STATUS "Looked for Cassandra libraries named ${CASSANDRA_NAMES}.")
    MESSAGE(FATAL_ERROR "Could NOT find Cassandra library")
  ENDIF (CASSANDRA_FIND_REQUIRED)
ENDIF (CASSANDRA_FOUND)

MARK_AS_ADVANCED(
  CASSANDRA_LIBRARY
  CASSANDRA_INCLUDE_DIR
  )

